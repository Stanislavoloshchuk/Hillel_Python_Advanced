# Task 1

# def validate_password(password):
    """
    Функция принимает пароль строкой и выполняет валидацию с помощью трёх
    вспомогательных функций:
    1. Содержит только a−z, A−Z, 0−9
    2. Содержит четное количество букв
    3. Содержит нечетное количество цифр
    Основная функция возвращает True, если пароль валидный.
    Если пароль не валидный, возвращает лист стрингов, в которых перечислены
    причины неуспешной проверки. Например: ["содержит запрещенные символы"]
    """
import re

password = input("Enter a password: \n")
flag = 0

def test1(password):
        if not re.search("[^a-zA-Z]", password):
            return False
        elif not re.search("[0-9]", password):
            return False
        elif re.search("[@$!%*#?&,.{}()]", password):
            return False
        elif re.search("\s", password):
            return False
        return True

def test2(password):
        if (len(re.sub("[^a-zA-Z]", "", password)) % 2):
            return False
        return True

def test3(password):
        if not (len(re.sub("[^0-9]", "", password)) % 2):
            return False
        return True

flag1, flag2, flag3 = test1(password), test2(password), test3(password)

if all([flag1, flag2, flag3]):
        print("True")
else:
        if not flag1:
            print("Should be only a−z, A−Z, 0−9")
        if not flag2:
            print("Q-ty of letters should be even")
        if not flag3:
            print("Should be Odd Q-ty of digits")

   # pass
    
# Task 2 & 3
"""
    Функция принимает число и конвертирует его в 4 форматах:
    decimal, octal, binary, hexadecimal. Каст в форматы описан в документации.
    При касте нужно избавляться от первых символов (0o31 -> 31, 0xe6 -> e6).
    Возвращает строку, отформатированную с помощью функции print_table.
"""
"""
    Функция генерирует псевдотаблицу текстом.
    :cols: количество колонок в таблице
    :rows: количество строк в таблице
    :*data: лист листов, где каждый вложенный лист - строка данных.
    Пример: print_table(cols=4, rows=2, [["Decimal", "Octal", "Binary", "Hexadecimal"], [230, 346, 11100110, "e6"]])
    Вернет строку вида:
     -----------------------------------------------------------
    | Decimal      | Octal        | Binary       | Hexadecimal  |
    | 230          | 346          | 11100110     | e6           |
     -----------------------------------------------------------
    Форматирование должно полностью совпадать с примером.
    Обратить внимание на размеры ячеек - 12 символов на текст + по 1 вокруг
    слева и справа от разделителя |.
"""    

input_dec = int(input("Enter a decimal number: "))


d = input_dec
o = oct(input_dec)[2:]  # , "in octal."
b = bin(input_dec)[2:]  # , "in binary."
h = hex(input_dec)[2:]  # , "in hexadecimal."


print('-' * 65)
print(*[f'|{type:^15}' for type in ("Decimal", "Binary", "Octal", "Hexadecimal")], '|', sep='')
print(*[f'|{type:^15}' for type in (d, b, o, h)], '|', sep='')
print('-' * 65)
